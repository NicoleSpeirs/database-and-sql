  1. List the commands for adding, updating, and deleting data.

    add: INSERT INTO
    UPDATE: UPDATE
    delete: DELETE

  2. Explain the structure for each type of command.

    INSERT INTO <Table name> (<Column List>)
    VALUES (<Values>)

    UPDATE <Table name>
    SET <Column to change>=<New value> WHERE <Search conditions>

    DELETE FROM <Table name>
    WHERE <Search conditions>

  3. What are some of the data types that can be used in tables? Give a real-world example of each type.

    String data types: CHAR(255) a fixed length string, can be used to add description of inventory item.
    Numeric data types: can be used to assign a fixed number of decimal points for prices of items.
    Date and Time data types: timestamp of when data gets uptaded, can be used in medical record entries at hospitals.


  4. Decide how to create a new table to hold a list of people invited to a wedding dinner. The table needs to have first and last names, whether they sent in their RSVP, the number of guests they are bringing, and the number of meals (1 for adults and 1/2 for children).

  Which data type would you use to store each of the following pieces of information?
    First and last name - Text
    Whether they sent in their RSVP - Boolean
    Number of guests - Integer
    Number of meals - Real

  Write a command that creates the table to track the wedding dinner.

   CREATE TABLE wedding_dinner(
    FirstName varchar(255),
    LastName varchar(255),
    RSVP boolean,
    Guests integer,
    Meals real
  );


  Write a command that adds a column to track whether the guest sent a thank you card.

    ALTER TABLE wedding_dinner ADD COLUMN ThankYouCard bool;

  You have decided to move the data about the meals to another table, so write a command to remove the column storing the number meals from the wedding table.

    ALTER TABLE wedding_dinner DROP COLUMN Meals;

  The guests will need a place to sit at the reception, so write a command that adds a column for table number.

    ALTER TABLE wedding_dinner ADD COLUMN TableNumber integer;

  The wedding is over and we do not need to keep this information, so write a command that deletes the table numbers from the database.

    DROP TABLE wedding_dinner;


  5. Write a command to create a new table to hold the books in a library with the columns ISBN, title, author, genre, publishing date, number of copies, and available copies.

      CREATE TABLE books (
        ISBN integer,
        title text,
        author text,
        genre text,
        published date,
        copies integer,
        available integer
      );


  Find three books and add their information to the table.


  INSERT INTO books (ISBN, title, author, genre, published, copies, available) VALUES
  (1250118360, "Algorithms to Live By", "Brian Christian and Tom Griffiths", "Computer Science", 2017-04-04, 5, 2),
  (9780062116932, "Search Inside Yourself", "Chade-Meng Tan", "Happiness Self-Help", 2014-09-02, 10, 6),
  (0545139708, "Harry Potter and the Deathly Hallows", "J. K. Rowling", "Novel", 2009-07-01, 20, 12);

  Someone has just checked out one of the books. Change the number of available copies to 1 fewer.

   UPDATE books SET available=1 where ISBN=1250118360;

  Now one of the books has been added to the banned books list. Remove it from the table.

  DELETE FROM books WHERE ISBN=0545139708;

  6. Write a command to make a new table to hold spacecrafts. Information should include id, name, year launched, country of origin, a brief description of the mission, orbiting body, if it is currently operating, and its approximate miles from Earth. In addition to the table creation, provide commands that perform the following operations:

  CREATE TABLE spacecrafts (
    id serial,
    name text,
    year_launched integer,
    country_of_origin text,
    mission_description text,
    orbiting_body text,
    operating boolean,
    miles_from_earth bigint
  );

  Add three non-Earth-orbiting satellites to the table.

    INSERT INTO spacecrafts (id, name, year_launched, country_of_origin, mission_description, orbiting_body, operating, miles_from_earth)
    VALUES
    (26734, '2001 Mars Odyssey', 2001, 'USA', 'Detect evidence of past or present water and ice', 'Mars', true, 33900000)
    (36576, 'Akatsuki', 2010, 'Japan', 'Study the planet Venus', 'Venus', true, 162000000),
    (37773, 'Juno', 2011, 'USA', 'Measure Jupiter's composition, gravity field, magnetic field, and polar magnetosphere', 'Jupiter', true, 356000000);

    INSERT INTO spacecrafts
    VALUES
    (36576, 'Akatsuki', 2010, 'Japan', 'Study the planet Venus', 'Venus', true, 162000000),
    (37773, 'Juno', 2011, 'USA', 'Measure Jupiter''s composition gravity field magnetic field and polar magnetosphere', 'Jupiter', true, 356000000);

  Remove one of the satellites from the table since it has just crashed into the planet.

    DELETE FROM spacecrafts
    WHERE id = 37773;

  Edit another satellite because it is no longer operating and change the value to reflect that.

    UPDATE spacecrafts
    SET operating = false
    WHERE id = 26734;

  7. Write a command to create a new table to hold the emails in your inbox. This table should include an id, the subject line, the sender, any additional recipients, the body of the email, the timestamp, whether or not you have read the email, and the id of the email chain it's in. Also provide commands that perform the following operations:

    CREATE TABLE emails (
      email_id serial primary key,
      subject text,
      sender text,
      cc text,
      body text,
      time timestamp,
      read boolean,
      chain_id integer
    );


  Add three new emails to the inbox.

  INSERT INTO emails(subject, sender, cc, body, time, read, chain_id)
  VALUES
  ('Birthday Party', 'benjismom@human.com', 'zoe@dog.com', 'Benji is turning 1 and we are having a prty', '2019-02-16 20:38:40', true, 90),
  ('California Trip', 'person@human.com', 'anotherperson@human.com', 'Here is the list of all the places we should visit', '2017-04-11 20:30:40', true, 5),
  ('Study Group', 'student@human.com', 'anotherstudent@human.com', 'Lets have a study group session this Saturday. I will be available from 12PM until 6PM', '2019-04-15 18:38:40', false, 122);


  You deleted one of the emails, so write a command to remove the row from the inbox table.

  DELETE FROM emails
  WHERE subject = 'Birthday Party';

  You started reading an email but just heard a crash in another room. Mark the email as unread before investigating the crash, so you can come back and read it later.

  UPDATE emails
  SET read = false
  WHERE subject = 'California Trip';